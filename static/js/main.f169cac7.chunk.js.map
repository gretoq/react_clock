{"version":3,"sources":["Components/Clock/Clock.tsx","Components/Clock/index.tsx","App.tsx","index.tsx"],"names":["getFormatedTime","time","toUTCString","slice","Clock","state","today","Date","clockId","undefined","this","setInterval","setState","console","info","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timeId","handleRightClick","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAWA,SAASA,EAAgBC,GACvB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,aAAoCC,EALtC,uDAOE,WAA2B,IAAD,OACxBC,KAAKF,QAAUG,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAKd,EAAgB,EAAKK,MAAMC,UACvC,OAZP,gCAeE,YAA0D,IAArCS,EAAoC,EAApCA,UACfA,IAAcL,KAAKM,MAAMD,WAC3BF,QAAQI,MAAR,uBAA8BF,EAA9B,eAA8CL,KAAKM,MAAMD,cAjB/D,kCAqBE,WACML,KAAKF,SACPU,cAAcR,KAAKF,WAvBzB,oBA2BE,WACE,IAAQO,EAAcL,KAAKM,MAAnBD,UACAT,EAAUI,KAAKL,MAAfC,MAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGnB,EAAgBM,YAxC3B,GAA2Bc,IAAMC,WCblBjB,ICIf,SAASkB,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAyB,CACvBU,UAAW,UACXY,UAAU,GAHd,EAMEC,YAAmCnB,EANrC,EA4BEoB,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEe,UAAU,KA/B9B,EAkCEK,YAAc,WACZ,EAAKpB,SAAS,CAAEe,UAAU,KAnC9B,uDAQE,WAA2B,IAAD,OACxBjB,KAAKkB,OAASjB,aAAY,WACxB,EAAKC,SAAS,CAAEG,UAAWO,QAC1B,MAEHW,SAASC,iBAAiB,cAAexB,KAAKmB,kBAE9CI,SAASC,iBAAiB,QAASxB,KAAKsB,eAf5C,kCAkBE,WACMtB,KAAKkB,QACPV,cAAcR,KAAKkB,QAGrBK,SAASE,oBAAoB,cAAezB,KAAKmB,kBAEjDI,SAASE,oBAAoB,QAASzB,KAAKsB,eAzB/C,oBAsCE,WACE,MAAgCtB,KAAKL,MAA7BU,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WA7CvC,GAAyBK,IAAMC,WCd/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f169cac7.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nfunction getFormatedTime(time: Date): string {\n  return time.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  clockId: NodeJS.Timer | undefined = undefined;\n\n  componentDidMount(): void {\n    this.clockId = setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(getFormatedTime(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate({ clockName }: Readonly<Props>): void {\n    if (clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.clockId) {\n      clearInterval(this.clockId);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getFormatedTime(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Clock } from './Clock';\n\nexport default Clock;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Clock from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timeId: NodeJS.Timer | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timeId = setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    if (this.timeId) {\n      clearInterval(this.timeId);\n    }\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleRightClick = (event: MouseEvent): void => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}