{"version":3,"sources":["Components/Clock/Clock.tsx","Components/Clock/index.tsx","App.tsx","index.tsx"],"names":["getFormatedTime","time","toUTCString","slice","Clock","state","today","Date","timeLog","this","window","setInterval","setState","console","info","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAgBC,GACvB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BG,OAAOG,QAAQC,KAAKd,EAAgB,EAAKK,MAAMC,UAC9C,OAZP,gCAeE,YAA0D,IAArCS,EAAoC,EAApCA,UACfA,IAAcN,KAAKO,MAAMD,WAC3BL,OAAOG,QAAQI,MAAf,uBAAqCF,EAArC,eAAqDN,KAAKO,MAAMD,cAjBtE,kCAqBE,WACEL,OAAOQ,cAAcT,KAAKD,WAtB9B,oBAyBE,WACE,IAAQO,EAAcN,KAAKO,MAAnBD,UACAT,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGnB,EAAgBM,YAtC3B,GAA2Bc,IAAMC,WCZlBjB,ICIf,SAASkB,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAyB,CACvBU,UAAW,UACXY,UAAU,GAHd,EAsBEC,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKlB,SAAS,CAAEe,UAAU,KAzB9B,EA4BEI,UAAY,WACV,EAAKnB,SAAS,CAAEe,UAAU,KA7B9B,uDAME,WAA2B,IAAD,OACxBjB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEG,UAAWO,QAC1B,MAEHU,SAASC,iBAAiB,cAAexB,KAAKmB,WAE9CI,SAASC,iBAAiB,QAASxB,KAAKsB,aAb5C,kCAgBE,WACEC,SAASE,oBAAoB,cAAezB,KAAKmB,WAEjDI,SAASE,oBAAoB,QAASzB,KAAKsB,aAnB/C,oBAgCE,WACE,MAAgCtB,KAAKJ,MAA7BU,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CAAOZ,UAAWA,WAvC5B,GAAyBK,IAAMC,WCd/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.2f443fad.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date\n};\n\nfunction getFormatedTime(time: Date): string {\n  return time.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timeLog = 0;\n\n  componentDidMount(): void {\n    this.timeLog = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info(getFormatedTime(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate({ clockName }: Readonly<Props>): void {\n    if (clockName !== this.props.clockName) {\n      window.console.debug(`Renamed from ${clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeLog);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getFormatedTime(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Clock } from './Clock';\n\nexport default Clock;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Clock from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount(): void {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.hideClock);\n\n    document.removeEventListener('click', this.showClock);\n  }\n\n  hideClock = (event: MouseEvent): void => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  showClock = (): void => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}